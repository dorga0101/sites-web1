package jogo.da.velha;

/**
 *
 * @author 
 */
import java.util.Scanner;

public class JogoDaVelha {

    private static char Perdedor;
    private char[][] tabuleiro;
    private char jogadorAtual;

    public JogoDaVelha() {
        tabuleiro = new char[3][3];
        jogadorAtual = 'X'; 
        inicializarTabuleiro();
    }

    private void inicializarTabuleiro() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                tabuleiro[i][j] = ' ';
            }
        }
    }

    public void imprimirTabuleiro() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(tabuleiro[i][j]);
                if (j < 2)
                    System.out.print(" | ");
            }
            System.out.println();
            if (i < 2)
                System.out.println("---------");
        }
    }

    public boolean fazerJogada(int linha, int coluna) {
        if (linha < 0 || linha > 2 || coluna < 0 || coluna > 2 || tabuleiro[linha][coluna] != ' ')
            return false;

        tabuleiro[linha][coluna] = jogadorAtual;
        jogadorAtual = (jogadorAtual == 'X') ? 'O' : 'X';
        return true;
    }

    public char verificarGanhador() {
        for (int i = 0; i < 3; i++) {
            if (tabuleiro[i][0] == tabuleiro[i][1] && tabuleiro[i][1] == tabuleiro[i][2] && tabuleiro[i][0] != ' ')
                return tabuleiro[i][0];

            if (tabuleiro[0][i] == tabuleiro[1][i] && tabuleiro[1][i] == tabuleiro[2][i] && tabuleiro[0][i] != ' ')
                return tabuleiro[0][i];
        }


        if (tabuleiro[0][0] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][2] && tabuleiro[0][0] != ' ')
            return tabuleiro[0][0];

        if (tabuleiro[0][2] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][0] && tabuleiro[0][2] != ' ')
            return tabuleiro[0][2];

        return ' '; 
    }

    public boolean verificarEmpate() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (tabuleiro[i][j] == ' ')
                    return false;
            }
        }
        return true;
    }

    public char getJogadorAtual() {
        return jogadorAtual;
    }

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            JogoDaVelha jogo = new JogoDaVelha();
            
            while (true) {
                jogo.imprimirTabuleiro();
                System.out.println("Jogador " + jogo.getJogadorAtual() + ", faça sua jogada (linha [0-2] e coluna [0-2]): ");
                
                int linha = scanner.nextInt();
                int coluna = scanner.nextInt();
                
                if (jogo.fazerJogada(linha, coluna)) {
                    
                    char ganhador = jogo.verificarGanhador();
                    if (ganhador != ' ') {
                        jogo.imprimirTabuleiro();
                        System.out.println("O jogador " + ganhador + " Parabéns você é o Mestre da Velha!!");
                        break;
                       
                        }
                    } else if (jogo.verificarEmpate()) {
                        jogo.imprimirTabuleiro();
                        System.out.println("O jogo terminou em velha.");
                        break;
                    }
                     char perdedor = jogo.verificarperdedor();
                    if (perdedor != ' '){
                        System.out.println("O jogador " + perdedor + " Parabéns você perdeu!!!!!");
                } else {
                    System.out.println("Jogada inválida. Tente novamente.");
                }
            }
        }
    }

    private char verificarperdedor() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}

